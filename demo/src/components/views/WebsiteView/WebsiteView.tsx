// this bullshit is entirely generated by chatgpt 01-preview

/* eslint-disable */

import {
  ExclamationCircleIcon,
  FolderIcon,
  HomeIcon,
} from "@heroicons/react/24/solid";
import { useCantTouchThis } from "hooks/useCantTouchThis";

export function WebsiteView() {
  // Helper function to create refs using useCantTouchThis
  const createRef = () => useCantTouchThis();

  // Sample data for the activity feed
  const feedItems = [
    {
      user: {
        name: "octocat",
        avatar: "https://github.com/octocat.png",
        profileUrl: "#",
      },
      action: "pushed to",
      repo: {
        name: "octocat/Hello-World",
        url: "#",
      },
      description: "Updated README.md",
      time: "2 hours ago",
    },
    {
      user: {
        name: "janedoe",
        avatar: "https://via.placeholder.com/48",
        profileUrl: "#",
      },
      action: "created a repository",
      repo: {
        name: "janedoe/new-project",
        url: "#",
      },
      description: "",
      time: "5 hours ago",
    },
    {
      user: {
        name: "johndoe",
        avatar: "https://via.placeholder.com/48",
        profileUrl: "#",
      },
      action: "opened an issue in",
      repo: {
        name: "johndoe/legacy-code",
        url: "#",
      },
      description: "Bug: Unable to compile on Windows",
      time: "1 day ago",
    },
    {
      user: {
        name: "alice",
        avatar: "https://via.placeholder.com/48",
        profileUrl: "#",
      },
      action: "forked",
      repo: {
        name: "bob/project-x",
        url: "#",
      },
      description: "",
      time: "1 day ago",
    },
    {
      user: {
        name: "charlie",
        avatar: "https://via.placeholder.com/48",
        profileUrl: "#",
      },
      action: "starred",
      repo: {
        name: "david/awesome-repo",
        url: "#",
      },
      description: "",
      time: "2 days ago",
    },
    {
      user: {
        name: "eve",
        avatar: "https://via.placeholder.com/48",
        profileUrl: "#",
      },
      action: "commented on issue in",
      repo: {
        name: "frank/legacy-system",
        url: "#",
      },
      description: "I am experiencing the same problem.",
      time: "3 days ago",
    },
    {
      user: {
        name: "grace",
        avatar: "https://via.placeholder.com/48",
        profileUrl: "#",
      },
      action: "opened a pull request in",
      repo: {
        name: "helen/open-source-project",
        url: "#",
      },
      description: "Added new feature for data processing",
      time: "4 days ago",
    },
    {
      user: {
        name: "isaac",
        avatar: "https://via.placeholder.com/48",
        profileUrl: "#",
      },
      action: "merged pull request in",
      repo: {
        name: "isaac/toolkit",
        url: "#",
      },
      description: "Improved performance for large datasets",
      time: "5 days ago",
    },
    {
      user: {
        name: "judy",
        avatar: "https://via.placeholder.com/48",
        profileUrl: "#",
      },
      action: "released",
      repo: {
        name: "judy/app",
        url: "#",
      },
      description: "Version 2.0.0",
      time: "6 days ago",
    },
    {
      user: {
        name: "ken",
        avatar: "https://via.placeholder.com/48",
        profileUrl: "#",
      },
      action: "created a gist",
      repo: {
        name: "Secret Algorithm",
        url: "#",
      },
      description: "",
      time: "1 week ago",
    },
  ];

  // Sample data for trending repositories
  const trendingRepos = [
    {
      name: "facebook/react",
      description:
        "A declarative, efficient, and flexible JavaScript library for building user interfaces.",
      stars: "171k",
      forks: "34k",
      language: "JavaScript",
      url: "#",
    },
    {
      name: "vuejs/vue",
      description:
        "ðŸ–– Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.",
      stars: "189k",
      forks: "30k",
      language: "JavaScript",
      url: "#",
    },
    // Add more trending repositories as needed
  ];

  // Sample data for who to follow
  const suggestedUsers = [
    {
      name: "torvalds",
      avatar: "https://github.com/torvalds.png",
      profileUrl: "#",
    },
    {
      name: "gaearon",
      avatar: "https://github.com/gaearon.png",
      profileUrl: "#",
    },
    // Add more suggested users as needed
  ];

  return (
    <div className="flex text-white">
      {/* Left Sidebar */}
      <aside className="w-64 bg-gray-900 min-h-screen p-6">
        {/* User Profile Section */}
        <div className="mb-8">
          <img
            ref={createRef()}
            src="https://github.com/octocat.png"
            alt="User Avatar"
            className="w-16 h-16 rounded-full mx-auto"
          />
          <h2 className="text-center text-xl font-semibold mt-4">octocat</h2>
        </div>

        {/* Navigation Links */}
        <nav>
          <ul className="space-y-4">
            <li>
              <a
                ref={createRef()}
                href="#"
                className="flex items-center px-4 py-2 text-gray-300 hover:bg-gray-800 rounded"
              >
                <HomeIcon className="w-5 h-5 mr-3" />
                Dashboard
              </a>
            </li>
            <li>
              <a
                ref={createRef()}
                href="#"
                className="flex items-center px-4 py-2 text-gray-300 hover:bg-gray-800 rounded"
              >
                <FolderIcon className="w-5 h-5 mr-3" />
                Repositories
              </a>
            </li>
            <li>
              <a
                ref={createRef()}
                href="#"
                className="flex items-center px-4 py-2 text-gray-300 hover:bg-gray-800 rounded"
              >
                <ExclamationCircleIcon className="w-5 h-5 mr-3" />
                Issues
              </a>
            </li>
            {/* Add more navigation links as needed */}
          </ul>
        </nav>
      </aside>

      {/* Main Content */}
      <main className="flex-1 p-6">
        <h1 className="text-3xl font-bold mb-6">Activity Feed</h1>
        <div className="space-y-6">
          {feedItems.map((item, index) => {
            const avatarRef = createRef();
            const userLinkRef = createRef();
            const repoLinkRef = createRef();

            return (
              <div key={index} className="flex items-start">
                {/* User Avatar */}
                <img
                  ref={avatarRef}
                  src={item.user.avatar}
                  alt={`${item.user.name}'s avatar`}
                  className="w-12 h-12 rounded-full mr-4"
                />
                <div className="flex-1">
                  {/* User Action */}
                  <p className="text-sm mb-1">
                    <a
                      ref={userLinkRef}
                      href={item.user.profileUrl}
                      className="text-blue-400 font-semibold hover:underline"
                    >
                      {item.user.name}
                    </a>{" "}
                    {item.action}{" "}
                    <a
                      ref={repoLinkRef}
                      href={item.repo.url}
                      className="text-blue-400 font-semibold hover:underline"
                    >
                      {item.repo.name}
                    </a>
                  </p>
                  {/* Description */}
                  {item.description && (
                    <p className="text-sm text-gray-400 mb-1">
                      {item.description}
                    </p>
                  )}
                  {/* Time */}
                  <p className="text-xs text-gray-500">{item.time}</p>
                </div>
              </div>
            );
          })}
        </div>

        {/* Footer with buttons */}
        <div className="mt-8 flex space-x-4">
          <button
            ref={createRef()}
            className="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
          >
            New Repository
          </button>
          <button
            ref={createRef()}
            className="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded"
          >
            Explore
          </button>
        </div>
      </main>

      {/* Right Sidebar */}
      <aside className="w-80 bg-gray-900 min-h-screen p-6">
        {/* Trending Repositories */}
        <section className="mb-8">
          <h2 className="text-xl font-bold mb-4">Trending Repositories</h2>
          <ul className="space-y-4">
            {trendingRepos.map((repo, index) => {
              const repoLinkRef = createRef();
              return (
                <li key={index}>
                  <a
                    ref={repoLinkRef}
                    href={repo.url}
                    className="block hover:underline text-blue-400 font-semibold"
                  >
                    {repo.name}
                  </a>
                  <p className="text-sm text-gray-400">{repo.description}</p>
                  <div className="flex items-center text-xs text-gray-500 mt-1">
                    <span className="mr-2">{repo.language}</span>
                    <span className="mr-2">â˜… {repo.stars}</span>
                    <span>âš‘ {repo.forks}</span>
                  </div>
                </li>
              );
            })}
          </ul>
        </section>

        {/* Who to Follow */}
        <section>
          <h2 className="text-xl font-bold mb-4">Who to Follow</h2>
          <ul className="space-y-4">
            {suggestedUsers.map((user, index) => {
              const avatarRef = createRef();
              const userLinkRef = createRef();
              const followButtonRef = createRef();

              return (
                <li key={index} className="flex items-center">
                  <img
                    ref={avatarRef}
                    src={user.avatar}
                    alt={`${user.name}'s avatar`}
                    className="w-8 h-8 rounded-full mr-3"
                  />
                  <a
                    ref={userLinkRef}
                    href={user.profileUrl}
                    className="flex-1 text-blue-400 font-semibold hover:underline"
                  >
                    {user.name}
                  </a>
                  <button
                    ref={followButtonRef}
                    className="bg-blue-600 hover:bg-blue-700 text-white text-sm font-bold py-1 px-3 rounded"
                  >
                    Follow
                  </button>
                </li>
              );
            })}
          </ul>
        </section>
      </aside>
    </div>
  );
}
